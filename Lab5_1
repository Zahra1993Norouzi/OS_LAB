#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>
#include <sys/wait.h>

#define NUM_SAMPLES 5000
#define HIST_SIZE 25

void sample_process(int hist[]) {
    for (int i = 0; i < NUM_SAMPLES; i++) {
        int counter = 0;
        for (int j = 0; j < 12; j++) {
            int random_num = rand() % 101; 
            if (random_num >= 49) {
                counter++;
            } else {
                counter--;
            }
        }
        int index = counter + 12;
        hist[index]++;
    }
}

void save_histogram(int hist[]) {
    FILE *file = fopen("histogram_data.csv", "w");
    if (file == NULL) {
        perror("Unable to open file");
        exit(1);
    }
    for (int i = -12; i <= 12; i++) {
        fprintf(file, "%d %d\n", i, hist[i + 12]);
    }
    fclose(file);
    printf("Histogram data saved to 'histogram_data.csv'\n");
}

  gnuplot
void plot_histogram() {
    FILE *gnuplot = popen("gnuplot -persistent", "w");
    if (gnuplot == NULL) {
        perror("Error opening gnuplot");
        exit(1);
    }
    fprintf(gnuplot, "set terminal png size 800,600\n");
    fprintf(gnuplot, "set output 'histogram_plot.png'\n");
    fprintf(gnuplot, "set title 'Histogram of Sampled Normal Distribution'\n");
    fprintf(gnuplot, "set xlabel 'Counter'\n");
    fprintf(gnuplot, "set ylabel 'Frequency'\n");
    fprintf(gnuplot, "set style fill solid\n");  // پر کردن میله‌های نمودار
    fprintf(gnuplot, "plot 'histogram_data.csv' using 1:2 with boxes lc rgb 'skyblue' notitle\n");
    fclose(gnuplot);
    printf("Histogram plot saved as 'histogram_plot.png'\n");
}

int main() {
    srand(time(NULL)); 

    int hist[HIST_SIZE] = {0}; 

    sample_process(hist); 

    save_histogram(hist); 

    plot_histogram(); 

    return 0;
}

